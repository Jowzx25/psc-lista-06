import java.util.Scanner;
import java.util.ArrayList; // Usaremos ArrayList para armazenar Par e √çmpar dinamicamente
import java.util.Arrays; // Usaremos Arrays para imprimir o vetor principal

public class SeparadorDeNumeros {

    public static void main(String[] args) {
        // Define o n√∫mero total de elementos
        final int TAMANHO = 20;
        
        // 1. Inicializa o Scanner e o vetor principal (tamanho fixo: 20)
        Scanner scanner = new Scanner(System.in);
        int[] vetorPrincipal = new int[TAMANHO];

        // 2. Inicializa as listas din√¢micas para Pares e √çmpares
        // Usamos ArrayList porque n√£o sabemos quantos Pares/√çmpares teremos
        ArrayList<Integer> listaPar = new ArrayList<>();
        ArrayList<Integer> listaImpar = new ArrayList<>();

        System.out.println("üöÄ Separador de N√∫meros Pares e √çmpares üöÄ");
        System.out.println("Por favor, digite " + TAMANHO + " n√∫meros inteiros:");

        // 3. Loop de Leitura, Armazenamento e Classifica√ß√£o
        for (int i = 0; i < TAMANHO; i++) {
            System.out.printf("Digite o %d¬∫ n√∫mero: ", (i + 1));
            
            // Leitura
            int numero = scanner.nextInt();
            
            // Armazenamento no vetor principal
            vetorPrincipal[i] = numero; 

            // Classifica√ß√£o (usando o operador m√≥dulo %)
            if (numero % 2 == 0) {
                // Se o resto da divis√£o por 2 for 0, √© PAR
                listaPar.add(numero);
            } else {
                // Se o resto da divis√£o por 2 for diferente de 0, √© √çMPAR
                listaImpar.add(numero);
            }
        }

        scanner.close(); 
        
        // --- Sa√≠da de Dados ---
        
        System.out.println("\n--- Resultados Finais ---");
        
        // 4. Imprime o Vetor Principal (usa a classe Arrays para formata√ß√£o simples)
        System.out.println("\nüî¢ Vetor Principal (20 n√∫meros):");
        System.out.println(Arrays.toString(vetorPrincipal));
        
        // 5. Imprime o Vetor PAR
        System.out.println("\n‚úÖ Vetor PAR (" + listaPar.size() + " elementos):");
        System.out.println(listaPar.toString());
        
        // 6. Imprime o Vetor √çMPAR
        System.out.println("\n‚ùå Vetor √çMPAR (" + listaImpar.size() + " elementos):");
        System.out.println(listaImpar.toString());
        
        System.out.println("\n--------------------------");
    }
}